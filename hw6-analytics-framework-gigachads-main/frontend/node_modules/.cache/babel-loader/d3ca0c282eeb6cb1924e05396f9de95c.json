{"ast":null,"code":"var _jsxFileName = \"/Users/nathanan/Documents/CMU Senior Spring 2022/17-514 Software Construction/hw5_santorini/santorini/frontend/src/App.tsx\";\nimport { Component } from 'react';\nimport './App.css';\nimport { Square } from './Square';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar oldHref = \"http://localhost:3000\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cells: [{\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }, {\n        text: \"\",\n        clazz: \"playable\"\n      }],\n      instructions: \"\",\n      posSelection: -1,\n      workerSelection: -1,\n      turn: 0,\n      playerStates: [],\n      winner: -1,\n      canBuild: true,\n      canMove: true\n    };\n    this.clickHandler = this.clickHandler.bind(this);\n    this.resetSelections = this.resetSelections.bind(this);\n  }\n\n  clickHandler(index) {\n    if (this.tileHasWorkerFromPlayer(index, this.state.turn.valueOf()) != -1) {\n      this.setState({\n        workerSelection: index\n      });\n    } else {\n      this.setState({\n        posSelection: index\n      });\n    }\n\n    this.updateInstructions();\n  }\n\n  updateInstructions() {\n    var instructions = \"\";\n\n    if (this.state.winner != -1) {\n      instructions = \"Player \" + this.state.winner + \" Won!\";\n    } else if (this.state.workerSelection == -1) {\n      instructions = \"Select a worker\";\n    } else if (this.state.posSelection == -1) {\n      instructions = \"Select a position\";\n    } else {\n      instructions = \"Select a command\";\n    }\n\n    this.setState({\n      instructions: instructions\n    });\n  }\n\n  updateStateFromGame(json) {\n    const turn = Number(this.getTurn(json));\n    const winner = Number(this.getWinner(json));\n    const canMove = this.getCanMove(json);\n    const canBuild = this.getCanBuild(json);\n    const newCells = this.convertToCell(json);\n    this.setState({\n      cells: this.convertToCell(json),\n      turn: turn,\n      playerStates: this.convertPlayerStates(json),\n      winner: winner,\n      canMove: canMove,\n      canBuild: canBuild\n    });\n    this.updateInstructions();\n\n    if (!canMove && !canBuild) {\n      this.endTurn();\n    }\n  }\n\n  convertPlayerStates(p) {\n    console.log(p[\"playerStates\"].length);\n    const playerStates = [];\n\n    for (var i = 0; i < p[\"playerStates\"].length; i++) {\n      const workerStates = [];\n\n      if (p[\"playerStates\"][i][\"workerStates\"]) {\n        for (var j = 0; j < p[\"playerStates\"][i][\"workerStates\"].length; j++) {\n          var w = {\n            workerId: p[\"playerStates\"][i][\"workerStates\"][j][\"workerId\"],\n            x: p[\"playerStates\"][i][\"workerStates\"][j][\"x\"],\n            y: p[\"playerStates\"][i][\"workerStates\"][j][\"y\"]\n          };\n          workerStates.push(w);\n        }\n      }\n\n      var godCardString = p[\"playerStates\"][i][\"godCard\"] ? p[\"playerStates\"][i][\"godCard\"] : \"\";\n      var c = {\n        playerId: p[\"playerStates\"][i][\"playerId\"],\n        workerStates: workerStates,\n        godCardString: godCardString\n      };\n      playerStates.push(c);\n    }\n\n    console.log(playerStates);\n    return playerStates;\n  }\n\n  convertToCell(p) {\n    const newCells = [];\n\n    for (var i = 0; i < p[\"board\"].length; i++) {\n      var c = {\n        text: p[\"board\"][i][\"text\"],\n        clazz: `clazz`\n      };\n      newCells.push(c);\n    }\n\n    return newCells;\n  }\n\n  getTurn(p) {\n    return p[\"turn\"];\n  }\n\n  getWinner(p) {\n    return p[\"winner\"];\n  }\n\n  getCanMove(p) {\n    return p[\"canMove\"];\n  }\n\n  getCanBuild(p) {\n    return p[\"canBuild\"];\n  }\n\n  async newGame() {\n    const response = await fetch(\"newgame\");\n    const json = await response.json();\n    this.updateStateFromGame(json);\n  }\n\n  async setWorker(url) {\n    const href = \"setworker?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n    this.updateStateFromGame(json);\n  }\n\n  async move(url) {\n    const href = \"move?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n    this.updateStateFromGame(json);\n  }\n\n  async build(url) {\n    const href = \"build?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n    this.updateStateFromGame(json);\n  }\n\n  async setGodCard(url) {\n    const href = \"setgodcard?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n    this.endTurn();\n    this.updateStateFromGame(json);\n  }\n\n  async undo() {\n    const response = await fetch(\"undo\");\n    const json = await response.json();\n    this.updateStateFromGame(json);\n  }\n\n  async endTurn() {\n    const response = await fetch(\"endturn\");\n    const json = await response.json();\n    this.updateStateFromGame(json);\n  }\n\n  async switch() {\n    if (window.location.href === \"http://localhost:3000/newgame\" && oldHref !== window.location.href) {\n      console.log(\"newGame\");\n      this.newGame();\n      oldHref = window.location.href;\n    } else if (window.location.href.split(\"?\")[0] === \"http://localhost:3000/build\" && oldHref !== window.location.href) {\n      this.build(window.location.href);\n      oldHref = window.location.href;\n    } else if (window.location.href.split(\"?\")[0] === \"http://localhost:3000/move\" && oldHref !== window.location.href) {\n      this.move(window.location.href);\n      oldHref = window.location.href;\n    } else if (window.location.href === \"http://localhost:3000/undo\" && oldHref !== window.location.href) {\n      this.undo();\n      oldHref = window.location.href;\n    } else if (window.location.href === \"http://localhost:3000/endturn\" && oldHref !== window.location.href) {\n      console.log(\"endTurn\");\n      this.endTurn();\n      oldHref = window.location.href;\n    } else if (window.location.href.split(\"?\")[0] === \"http://localhost:3000/setworker\" && oldHref !== window.location.href) {\n      console.log(\"setWorker\");\n      this.setWorker(window.location.href);\n      oldHref = window.location.href;\n    } else if (window.location.href.split(\"?\")[0] === \"http://localhost:3000/setgodcard\" && oldHref !== window.location.href) {\n      console.log(\"setgodcard\");\n      this.setGodCard(window.location.href);\n      oldHref = window.location.href;\n    }\n  }\n\n  tileHasWorker(index) {\n    var x = Math.floor(index / 5);\n    var y = index % 5;\n\n    for (var player of this.state.playerStates) {\n      for (var workerState of player.workerStates) {\n        if (workerState.x == x && workerState.y == y) {\n          return workerState.workerId;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  getPlayerFromTile(index) {\n    var x = Math.floor(index / 5);\n    var y = index % 5;\n\n    for (var player of this.state.playerStates) {\n      for (var workerState of player.workerStates) {\n        if (workerState.x == x && workerState.y == y) {\n          return player.playerId;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  tileHasWorkerFromPlayer(index, playerId) {\n    var x = Math.floor(index / 5);\n    var y = index % 5;\n\n    if (this.state.playerStates != [] && this.state.playerStates[playerId]) {\n      var player = this.state.playerStates[playerId];\n\n      for (var workerState of player.workerStates) {\n        if (workerState.x == x && workerState.y == y) {\n          return workerState.workerId;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  resetSelections() {\n    this.setState({\n      workerSelection: -1,\n      posSelection: -1\n    });\n  }\n\n  generateGodCardScreen() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Santorini\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"It is Player \", this.state.turn, \"'s turn \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Instruction: Choose a god card.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bottombar\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/setgodcard?card=None\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/setgodcard?card=Demeter\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Demeter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/setgodcard?card=Pan\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Pan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/setgodcard?card=Minotaur\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Minotaur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/newgame\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"New Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this);\n  }\n\n  generateMainGame() {\n    const rows = [0, 0, 0, 0, 0].map((_, i) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [...this.state.cells].splice(i * 5, 5).map((_ref, j) => {\n          let {\n            text,\n            clazz\n          } = _ref;\n          var index = i * 5 + j;\n          var color = \"darkorange\";\n\n          if (this.state.workerSelection == index) {\n            color = \"blue\";\n          } else if (this.state.posSelection == index) {\n            color = \"green\";\n          }\n\n          var circleBorder = \"0px\";\n          var circleColor = \"white\";\n\n          if (this.tileHasWorker(index) != -1) {\n            circleBorder = \"10px\";\n\n            if (this.getPlayerFromTile(index) == 0) {\n              circleColor = \"black\";\n            }\n          }\n\n          return /*#__PURE__*/_jsxDEV(Square, {\n            onClick: () => {\n              this.clickHandler(i * 5 + j);\n            },\n            contents: text,\n            color: color,\n            circleBorder: circleBorder,\n            circleColor: circleColor\n          }, i * 5 + j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 11\n          }, this);\n        })\n      }, \"row_\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 7\n      }, this);\n    });\n    let playerStatesP = [];\n\n    if (this.state.playerStates != [] && this.state.playerStates[0] && this.state.playerStates[0].hasOwnProperty(\"workerStates\")) {\n      playerStatesP = this.state.playerStates.map(_ref2 => {\n        let {\n          playerId,\n          workerStates\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Player\", playerId, \":\", workerStates.map(_ref3 => {\n            let {\n              workerId,\n              x,\n              y\n            } = _ref3;\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"workerId \", workerId, \": (\", x, \",\", y, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 49\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 7\n        }, this);\n      });\n    }\n\n    const decisionState = \"player=\" + this.state.turn + \"&worker=\" + this.tileHasWorker(this.state.workerSelection.valueOf()) + \"&pos=\" + this.state.posSelection;\n    const buildHref = \"/build?\" + decisionState;\n\n    const mainGame = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Santorini\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"It is Player \", this.state.turn, \"'s turn \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Instruction: \", this.state.instructions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Worker Selection: \", this.state.workerSelection]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Position Selection: \", this.state.posSelection]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Player can Move? \", Boolean(this.state.canMove).toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Player can Build? \", Boolean(this.state.canBuild).toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: playerStatesP\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          cellSpacing: \"0\",\n          id: \"table\",\n          style: {\n            margin: 'auto',\n            width: \"auto\",\n            height: \"auto\",\n            backgroundColor: 'darkorange',\n            color: 'white',\n            fontSize: \"3em\",\n            tableLayout: 'fixed'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: rows\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bottombar\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.resetSelections,\n            children: \"Reset Selections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/setworker?\" + decisionState,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"SetWorker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/build?\" + decisionState,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Build Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/build?\" + decisionState,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Build Dome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/move?\" + decisionState,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Move\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/endturn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"End Turn Early\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/newgame\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"New Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 5\n    }, this);\n\n    return mainGame;\n  }\n\n  render() {\n    this.switch();\n    console.log(\"Player states\" + this.state.playerStates.length);\n\n    if (this.state.playerStates) {\n      console.log(\"hi\");\n    }\n\n    if (this.state.playerStates && (this.state.playerStates[0].godCardString == \"\" || this.state.playerStates[1].godCardString == \"\")) {\n      return this.generateGodCardScreen();\n    }\n\n    return this.generateMainGame();\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/nathanan/Documents/CMU Senior Spring 2022/17-514 Software Construction/hw5_santorini/santorini/frontend/src/App.tsx"],"names":["Component","Square","oldHref","App","constructor","props","state","cells","text","clazz","instructions","posSelection","workerSelection","turn","playerStates","winner","canBuild","canMove","clickHandler","bind","resetSelections","index","tileHasWorkerFromPlayer","valueOf","setState","updateInstructions","updateStateFromGame","json","Number","getTurn","getWinner","getCanMove","getCanBuild","newCells","convertToCell","convertPlayerStates","endTurn","p","console","log","length","i","workerStates","j","w","workerId","x","y","push","godCardString","c","playerId","newGame","response","fetch","setWorker","url","href","split","move","build","setGodCard","undo","switch","window","location","tileHasWorker","Math","floor","player","workerState","getPlayerFromTile","generateGodCardScreen","textAlign","generateMainGame","rows","map","_","splice","color","circleBorder","circleColor","playerStatesP","hasOwnProperty","decisionState","buildHref","mainGame","Boolean","toString","margin","width","height","backgroundColor","fontSize","tableLayout","render"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport './App.css'\nimport { Square } from './Square'\n\nvar oldHref = \"http://localhost:3000\"\n\ninterface Cell {\n  text: String;\n  clazz: String;\n}\n\ninterface WorkerState {\n  workerId: Number;\n  x: Number;\n  y: Number;\n}\n\ninterface PlayerState {\n  playerId: Number;\n  workerStates: Array<WorkerState>;\n  godCardString: String;\n}\n\ninterface Cells {\n  cells: Array<Cell>,\n  instructions: String,\n  playerStates: Array<PlayerState>\n  workerSelection: Number\n  posSelection: Number\n  turn: Number\n  winner: Number\n  canMove: boolean\n  canBuild: boolean\n}\n\ninterface Props {\n}\n\nclass App extends Component<Props, Cells> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      cells: [ \n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"},\n        { text: \"\", clazz: \"playable\"}, \n      ],\n      instructions: \"\",\n      posSelection: -1,\n      workerSelection: -1,\n      turn: 0,\n      playerStates: [],\n      winner: -1,\n      canBuild: true,\n      canMove: true,\n    };\n    this.clickHandler = this.clickHandler.bind(this);\n    this.resetSelections = this.resetSelections.bind(this);\n  }\n\n\n  clickHandler(index: number){\n    if(this.tileHasWorkerFromPlayer(index, this.state.turn.valueOf()) != -1) {\n      this.setState({workerSelection: index});\n    } else {\n      this.setState({posSelection: index});\n    }\n\n    this.updateInstructions()\n\n  }\n\n  updateInstructions() {\n    var instructions = \"\"\n    if (this.state.winner != -1) {\n      instructions = \"Player \" + this.state.winner + \" Won!\"\n    }\n    else if (this.state.workerSelection == -1) {\n      instructions = \"Select a worker\"\n    } else if (this.state.posSelection == -1) {\n      instructions = \"Select a position\"\n    } else {\n      instructions = \"Select a command\"\n    }\n    this.setState({instructions: instructions})\n  }\n\n  updateStateFromGame(json: Object) {\n    const turn = Number(this.getTurn(json))\n    const winner = Number(this.getWinner(json))\n    const canMove = this.getCanMove(json)\n    const canBuild = this.getCanBuild(json)\n\n    const newCells: Array<Cell> = this.convertToCell(json)\n\n    this.setState({ cells: this.convertToCell(json), turn: turn,\n                    playerStates: this.convertPlayerStates(json), winner: winner,\n                    canMove: canMove, canBuild: canBuild})\n\n    this.updateInstructions()\n\n    if (!canMove && !canBuild) {\n      this.endTurn()\n    }\n  }\n\n  convertPlayerStates(p: any) : Array<PlayerState> {\n\n    console.log(p[\"playerStates\"].length)\n    const playerStates: Array<PlayerState> = [];\n    for (var i = 0; i < p[\"playerStates\"].length; i++) {\n      const workerStates: Array<WorkerState> = [];\n      if (p[\"playerStates\"][i][\"workerStates\"]) {\n        for (var j = 0; j < p[\"playerStates\"][i][\"workerStates\"].length; j++) {\n          var w: WorkerState = {\n            workerId: p[\"playerStates\"][i][\"workerStates\"][j][\"workerId\"],\n            x: p[\"playerStates\"][i][\"workerStates\"][j][\"x\"],\n            y: p[\"playerStates\"][i][\"workerStates\"][j][\"y\"]\n          }\n          workerStates.push(w);\n        }\n      }\n\n      var godCardString = p[\"playerStates\"][i][\"godCard\"] ? p[\"playerStates\"][i][\"godCard\"] : \"\"\n      var c: PlayerState = {\n        playerId: p[\"playerStates\"][i][\"playerId\"],\n        workerStates: workerStates,\n        godCardString: godCardString,\n      };\n      playerStates.push(c);\n    }\n    console.log(playerStates)\n    return playerStates;\n  }\n  convertToCell(p: any): Array<Cell> {\n    const newCells: Array<Cell> = [];\n    \n    for (var i = 0; i < p[\"board\"].length; i++) {\n      var c: Cell = {\n        text: p[\"board\"][i][\"text\"],\n        clazz: `clazz`,\n      };\n      newCells.push(c);\n    }\n\n    return newCells;\n  }\n\n  getTurn(p: any): String {\n    return p[\"turn\"]\n  }\n\n  getWinner(p: any): String | undefined {\n    return p[\"winner\"]\n  }\n\n  getCanMove(p: any): boolean {\n    return p[\"canMove\"]\n  }\n\n  getCanBuild(p: any): boolean {\n    return p[\"canBuild\"]\n  }\n\n  async newGame() {\n    const response = await fetch(\"newgame\");\n    const json = await response.json();\n    this.updateStateFromGame(json);\n  }\n\n  async setWorker(url: String) {\n    const href = \"setworker?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n    this.updateStateFromGame(json)\n  }\n\n  async move(url: String) {\n    const href = \"move?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n    this.updateStateFromGame(json)\n  }\n\n  async build(url: String) {\n    const href = \"build?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n    this.updateStateFromGame(json)\n  }\n\n  async setGodCard(url: String) {\n    const href = \"setgodcard?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n    this.endTurn();\n    this.updateStateFromGame(json)\n  }\n\n\n  async undo() {\n    const response = await fetch(\"undo\");\n    const json = await response.json();\n    this.updateStateFromGame(json)\n  }\n\n  async endTurn() {\n    const response = await fetch(\"endturn\");\n    const json = await response.json();\n    this.updateStateFromGame(json)\n  }\n\n  async switch() {\n    if (\n      window.location.href === \"http://localhost:3000/newgame\" &&\n      oldHref !== window.location.href\n    ) {\n      console.log(\"newGame\")\n      this.newGame();\n      oldHref = window.location.href;\n    } else if (\n      window.location.href.split(\"?\")[0] === \"http://localhost:3000/build\" &&\n      oldHref !== window.location.href\n    ) {\n      this.build(window.location.href);\n      oldHref = window.location.href;\n    } else if (\n        window.location.href.split(\"?\")[0] === \"http://localhost:3000/move\" &&\n        oldHref !== window.location.href\n      ) {\n        this.move(window.location.href);\n        oldHref = window.location.href;\n    } else if (\n      window.location.href === \"http://localhost:3000/undo\" &&\n      oldHref !== window.location.href\n    ) {\n      this.undo();\n      oldHref = window.location.href;\n    } else if (\n      window.location.href === \"http://localhost:3000/endturn\" &&\n      oldHref !== window.location.href\n    ) {\n      console.log(\"endTurn\")\n      this.endTurn();\n      oldHref = window.location.href;\n    } else if (\n      window.location.href.split(\"?\")[0] === \"http://localhost:3000/setworker\" &&\n      oldHref !== window.location.href\n    ) {\n      console.log(\"setWorker\")\n      this.setWorker(window.location.href);\n      oldHref = window.location.href;\n    } else if (\n      window.location.href.split(\"?\")[0] === \"http://localhost:3000/setgodcard\" &&\n      oldHref !== window.location.href\n    ) {\n      console.log(\"setgodcard\")\n      this.setGodCard(window.location.href);\n      oldHref = window.location.href;\n    }\n  };\n\n  tileHasWorker(index : number) : Number {\n    var x : number = Math.floor(index/5)\n    var y : number = index%5\n    for (var player of this.state.playerStates) {\n      for (var workerState of player.workerStates) {\n        if (workerState.x == x && workerState.y == y) {\n          return (workerState.workerId);\n        }\n      }\n    }\n    return -1;\n  }\n\n  getPlayerFromTile(index : number) : Number {\n    var x : number = Math.floor(index/5)\n    var y : number = index%5\n    for (var player of this.state.playerStates) {\n      for (var workerState of player.workerStates) {\n        if (workerState.x == x && workerState.y == y) {\n          return (player.playerId);\n        }\n      }\n    }\n    return -1;\n  }\n\n  tileHasWorkerFromPlayer(index : number, playerId : number) : Number {\n    var x : number = Math.floor(index/5)\n    var y : number = index%5\n    \n    if (this.state.playerStates != [] && this.state.playerStates[playerId]) {\n      var player = this.state.playerStates[playerId]\n      for (var workerState of player.workerStates) {\n        if (workerState.x == x && workerState.y == y) {\n          return (workerState.workerId);\n        }\n      }\n    }\n    return -1;\n  }\n\n  resetSelections() {\n    this.setState({workerSelection: -1, posSelection: -1});\n  }\n\n  generateGodCardScreen() {\n    return (\n      <div className=\"App\">\n        <div style={{textAlign:\"center\"}}>\n          <h1>Santorini</h1>\n          <p>It is Player {this.state.turn}'s turn </p>\n          <p>Instruction: Choose a god card.</p>\n          <br />\n        </div>\n        <div id=\"bottombar\">\n          <a href={\"/setgodcard?card=None\"}><button>None</button></a>\n          <a href={\"/setgodcard?card=Demeter\"}><button>Demeter</button></a>\n          <a href={\"/setgodcard?card=Pan\"}><button>Pan</button></a>\n          <a href={\"/setgodcard?card=Minotaur\"}><button>Minotaur</button></a>\n          <a href={\"/newgame\"}><button>New Game</button></a>\n        </div>\n      </div>\n    )\n  }\n\n  generateMainGame() {\n    const rows = [0,0,0,0,0].map((_,i) => { return ( \n      <tr key={\"row_\" + i}>\n        { [...this.state.cells].splice(i*5,5).map(({ text, clazz },j) => { \n\n          var index = i*5+j;\n          var color = \"darkorange\"\n          if (this.state.workerSelection == index) {\n            color = \"blue\"\n          } else if (this.state.posSelection == index) {\n            color = \"green\"\n          }\n          \n          var circleBorder = \"0px\"\n          var circleColor = \"white\"\n          if (this.tileHasWorker(index) != -1) {\n            circleBorder = \"10px\"\n            if (this.getPlayerFromTile(index) == 0) {\n              circleColor = \"black\"\n            }\n          }            \n          return (\n          <Square\n            key={i*5+j}\n            onClick={()=>{this.clickHandler(i*5+j)}}\n            contents={text}\n            color={color}\n            circleBorder={circleBorder}\n            circleColor={circleColor}\n          />\n        )}\n        )}\n      </tr>)\n    }\n  );\n\n  let playerStatesP : JSX.Element[] = []\n  \n  if (this.state.playerStates != [] && this.state.playerStates[0] && \n      this.state.playerStates[0].hasOwnProperty(\"workerStates\")) {\n    playerStatesP = this.state.playerStates.map(({playerId, workerStates}) => { return ( \n      <p>Player{playerId}: \n        { workerStates.map(({workerId, x,y}) => <p>workerId {workerId}: ({x},{y})</p>) }\n      </p>\n    ) }\n  );\n  }\n  const decisionState = \"player=\" + this.state.turn + \"&worker=\" + \n    this.tileHasWorker(this.state.workerSelection.valueOf()) + \"&pos=\" + this.state.posSelection;\n  const buildHref = \"/build?\" + decisionState;\n\n  const mainGame = \n    <div className=\"App\">\n      <div style={{textAlign:\"center\"}}>\n        <h1>Santorini</h1>\n        <p>It is Player {this.state.turn}'s turn </p>\n        <p>Instruction: {this.state.instructions}</p>\n        <p>Worker Selection: {this.state.workerSelection}</p>\n        <p>Position Selection: {this.state.posSelection}</p>\n        <p>Player can Move? {Boolean(this.state.canMove).toString()}</p>\n        <p>Player can Build? {Boolean(this.state.canBuild).toString()}</p>\n        <div>\n          {playerStatesP}\n        </div>\n        <table cellSpacing=\"0\" id=\"table\" style={{\n          margin:'auto',\n          width: \"auto\",\n          height:\"auto\",\n          backgroundColor:'darkorange',\n          color:'white',\n          fontSize:\"3em\",\n          tableLayout:'fixed'\n        }}>\n          <tbody>\n            {rows}\n          </tbody>\n        </table>\n        <br />\n      </div>\n      <div id=\"bottombar\">\n        <a><button onClick={this.resetSelections}>Reset Selections</button></a>\n        <a href={\"/setworker?\" + decisionState} ><button>SetWorker</button></a>\n        <a href={\"/build?\" + decisionState} ><button>Build Level</button></a>\n        <a href={\"/build?\" + decisionState} ><button>Build Dome</button></a>\n        <a href={\"/move?\" + decisionState}><button>Move</button></a>\n        <a href={\"/endturn\"}><button>End Turn Early</button></a>\n        <a href={\"/newgame\"}><button>New Game</button></a>\n      </div>\n    </div>\n    return mainGame\n  }\n\n  render() {\n    this.switch()\n\n    console.log(\"Player states\" + this.state.playerStates.length)\n    if (this.state.playerStates) {\n      console.log(\"hi\")\n    }\n    if (this.state.playerStates && (this.state.playerStates[0].godCardString == \"\" || this.state.playerStates[1].godCardString == \"\")) {\n      return this.generateGodCardScreen();\n    }\n\n    return this.generateMainGame()\n  };\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}